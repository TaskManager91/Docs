[
	{
		"url": "/outofthebox/widgetmenu/ourwidget",
		"title": "Widget Integration",
		"filter": "easyintegration",
		"tags": "Widget Integration",
		"content": "Widget feature is an SAQ-A compliant solution, which gives you a styled out-of-the-box payment form for end customers, both as a modal view or directly in your website."
	},
	{
		"url": "/outofthebox/widgetmenu/modalwidget",
		"title": "Modal Widget",
		"filter": "easyintegration",
		"tags": "Modal Widget Integration",
		"content": "In order to use this functionality, every integrator should execute only 2 steps: 1. Add payengine.widget.min.js (get it here) 2. Call initAsModal() function on PayEngineWidget object to display the payment form in modal view Here is snippet how your html could look like:"
	},
	{
		"url": "/outofthebox/widgetmenu/modalwidgetreference",
		"title": "Modal Widget Reference",
		"filter": "easyintegration",
		"tags": "Modal Widget Reference",
		"content": "Here you can find all needed methods and respective parameters to further enrich your checkout workflow. ! Important -> All methods should be called on PayEngineWidget object (e.g PayEngineWidget.desiredMethod(parameters))."
	},
	{
		"url": "/outofthebox/widgetmenu/inlinewidget",
		"title": "Inline Widget Implementation",
		"filter": "easyintegration",
		"tags": "Inline Widget Implementation",
		"content": "In order to use this functionality, every integrator should execute only 3 steps: 1. Add payengine.widget.min.js (get it here) 2. Call initAsInlineComponent() function on PayEngineWidget object to display the payment form 3. Handle Widget initialization result in initCallback"
	},
	{
		"url": "/outofthebox/widgetmenu/inlinewidgetreference",
		"title": "Inline Widget Reference",
		"filter": "easyintegration",
		"tags": "Inline Widget Reference",
		"content": "Here you can find all needed methods and respective parameters to further enrich your checkout workflow."
	},
	{
		"url": "/outofthebox/widgetmenu/piwidget",
		"title": "Widget as a Bridge implementation",
		"filter": "easyintegration",
		"tags": "Widget as a Bridge implementation",
		"content": "In order to use this functionality, every integrator should execute only 3 steps: 1. Add payengine.widget.min.js (get it here) 2. Call initAsInlineComponentPi() function on PayEngineWidget object to display the payment form 3. Handle Widget initialization result in initCallback"
	},
	{
		"url": "/outofthebox/widgetmenu/piwidgetreference",
		"title": "Widget as a Bridge reference",
		"filter": "easyintegration",
		"tags": "Widget as a Bridge reference",
		"content": "Here you can find all needed methods and respective parameters to further enrich your checkout workflow.! Important -> All methods should be called on PayEngineWidget object (e.g PayEngineWidget.desiredMethod(parameters))."
	},
	{
		"url": "/outofthebox/widgetmenu/deviceident",
		"title": "Device Ident",
		"filter": "easyintegration",
		"tags": "Device Ident",
		"content": "Important! Device Ident is available only for ECOM transactions If Device Ident is set to true, Device Ident Token will be send with the transaction object on transaction create"
	},
	{
		"url": "/outofthebox/widgetexample",
		"title": "Widget Example",
		"filter": "easyintegration",
		"tags": "Widget Example",
		"content": "Example implementation of the Widget"
	},
	{
		"url": "/outofthebox/paylink",
		"title": "Concardis Paylink",
		"filter": "easyintegration",
		"tags": "Concardis Paylink",
		"content": "An additional very easy possibility to process payments it the Concardis Paylink Would you like to receive partial or advance payments before the service is delivered completely? And give your customers the opportunity to pay quickly and conveniently online with their preferred payment method and channel? Send a Concardis payment link - via e-mail, SMS, WhatsApp or via your social media channels. Your customer can access an individual payment page via the paylink, choose from common payment methods and pay for it. Whether it is a hotel, a travel agency, a government agency or an association that wants to collect membership fees. The Payengine Paylink is suitable for almost all industries and services. Fast, simple and above all safe. "
	},
	{
		"url": "/outofthebox/plugins",
		"title": "Shop Plugins",
		"filter": "easyintegration",
		"tags": "Shop Plugins",
		"content": "Shopware - our own solution Other Plugins can be purchased here. Magento (from v. 1.5.x and higher incl. Enterprise Edition) Magento (v. 2.x CE and EE) WordPress WooCommerce (from v. 2.x / 3.x) WordPress E-Commerce (from v. 3.x) WordPress JigoShop (v. 1.2.x) Shopware (from v. 4.x / 5.x) PrestaShop (from v. 1.5.x / 1.6.x / 1.7.x) xt:Commerce (v. 3.x) Gambio (v. GX 1 / 2) xtcModified (v. 1.x) commerce:SEO (v1 und v2) OpenCart (from v. 1.5.x / ab. V. 2.x) Mijoshop Opencart for Joomla AceShop Opencart for Joomla Oxid eSales (from v. 4.7.x including Enterprise Edition) seo:Mercari (from v. 1.x) JTL 3 (3.x) JTL 4 (4.x) Drupal Commerce (from Drupal 7.x) Only Drupal 7.x Xt:Commerce 4 & 5 (from. V. 4.x / 5.x)"
	},
	{
		"url": "/buildyourown/restdoc/aboutourapi",
		"title": "About our API",
		"filter": "customintegration",
		"tags": "About our API",
		"content": "We offer a REST based API, with HTTP Basic Access Authorization and JSON as payload format."
	},
	{
		"url": "/buildyourown/restdoc/authentication",
		"title": "API Authentication",
		"filter": "customintegration",
		"tags": "API Authentication",
		"content": "Authorization of requests is done via HTTP basic access authentication. HTTP basic accesss authentication header example"
	},
	{
		"url": "/buildyourown/restdoc/errors",
		"title": "API Errors",
		"filter": "customintegration",
		"tags": "API Errors",
		"content": "Our API Endpoints use conventional HTTP response codes to indicate the success or failure of an API request.  In general, codes in the 2xx range indicate success, codes in the 4xx range indicate an error that failed given the information provided (e.g., a required parameter was omitted, a charge failed, etc.), and codes in the 5xx range indicate an error with our backend (these are rare). HttpStatusCode"
	},
	{
		"url": "/buildyourown/restdoc/createcustomer",
		"title": "API create Customer",
		"filter": "customintegration",
		"tags": "API create Customer",
		"content": "Creating a customer is pretty simple, since there is only one value which is mandatory."
	},
	{
		"url": "/buildyourown/restdoc/preformpayment",
		"title": "API perform a payment",
		"filter": "customintegration",
		"tags": "API perform a payment",
		"content": "In this how to we will perform a paypal payment via curl. We start with the body of our request:"
	},
	{
		"url": "/buildyourown/restdoc/refundpayment",
		"title": "API refund a payment",
		"filter": "customintegration",
		"tags": "API refund a payment",
		"content": "n this how to we will perform a refund of paypal payment via curl. Refunds can only be applied on refund or capture transaction with the status SUCCESS. We start with the body of the request:"
	},
	{
		"url": "/buildyourown/restdoc/providercodes",
		"title": "API provider codes",
		"filter": "customintegration",
		"tags": "API provider codes",
		"content": "The Provider Code is the original response Code from the payment provider/ acquirer. It can be found in every transaction response:"
	},
	{
		"url": "/buildyourown/restdoc/phpsdk",
		"title": "API PHP SDK",
		"filter": "customintegration",
		"tags": "API PHP SDK",
		"content": "This is a quickstart guide for using our PHP SDK to accept credit card payments."
	},
	{
		"url": "/buildyourown/restdoc/simulator",
		"title": "API integration test (Simulator)",
		"filter": "customintegration",
		"tags": "API integration test (Simulator)",
		"content": "Our simulator is the simplest way to test your integration in our test enviroment. (apitest.payengine.de) With the simulator you are able to test positive/negative use cases. To get a postive response use 1,00 as amount. To get a negative response use 1,01 as amount. This works for all our products (paypal, sofort, ratepay, paydirekt). To test your credit card integration, create transactions with these PANs:"
	},
	{
		"url": "/buildyourown/restapi",
		"title": "API Endpoint Structure",
		"filter": "customintegration",
		"tags": "API Endpoint Structure Example",
		"content": "API Endpoint Structure Example"
	}
]